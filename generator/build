#!/usr/bin/env php
<?php

/**
 * Load dependencies
 */
require __DIR__ . '/bootstrap.php';

/**
 * Parse the GL Spec
 */
$spec = new GLSpec;
$reader = new GLSpecReader;
$gen = new ExtGenerator;


// parse the GL spec
$reader->parse($spec, __DIR__ . '/data/gl.xml');

// import the gl spec into the generator
$gen->import($spec, 'gl', '3.2');

// parse the glfw header
$glfwparser = new GLFWHeaderParser;
$glfwparser->process(GEN_PATH_EXT . '/vendor/glfw/include/GLFW/glfw3.h', $gen);

// build the extension
$gen->build(GEN_PATH_EXT . '/');

die;


/**
 * Build the glfw.c file 
 *
 * Its not coded very well and ignores basically every PSR. This entire generator thing
 * was just created to speed up the implementation of the bindings. In the end it would probably 
 * have been faster to simply write the C code manually. 
 */

//require __DIR__ . '/method_generator.php';

/**
 * Read the methods
 */
$methods = require __DIR__ . '/definitions/methods.php';

/**
 * Read the constants
 */
$constants = require __DIR__ . '/definitions/constants.php';

/**
 * Read the resources
 */
$resources = require __DIR__ . '/definitions/resources.php';

$methods = array_merge($methods, $gen->methods);

/**
 * Read the template
 */
ob_start();
require __DIR__ . '/templates/glfw.c.php';

/**
 * Write
 */
file_put_contents(__DIR__ . '/../glfw_gen.c', ob_get_clean());
